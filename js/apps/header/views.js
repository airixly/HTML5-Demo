// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["marionette", "app", "text!./tpl/header-bar.html", "text!./tpl/header-item.html"], function(Marionette, App, headerBarTpl, headerItemTpl) {
    var HeaderItemView, HeaderView, NavLayout, _ref, _ref1, _ref2;
    return {
      HeaderItemView: HeaderItemView = (function(_super) {
        __extends(HeaderItemView, _super);

        function HeaderItemView() {
          _ref = HeaderItemView.__super__.constructor.apply(this, arguments);
          return _ref;
        }

        HeaderItemView.prototype.template = _.template(headerItemTpl, null, {
          variable: "data"
        });

        HeaderItemView.prototype.tagName = "li";

        return HeaderItemView;

      })(Marionette.ItemView),
      HeaderView: HeaderView = (function(_super) {
        __extends(HeaderView, _super);

        function HeaderView() {
          _ref1 = HeaderView.__super__.constructor.apply(this, arguments);
          return _ref1;
        }

        HeaderView.prototype.tagName = "ul";

        HeaderView.prototype.className = "nav navbar-nav";

        HeaderView.prototype.itemView = HeaderItemView;

        return HeaderView;

      })(Marionette.CollectionView),
      NavLayout: NavLayout = (function(_super) {
        __extends(NavLayout, _super);

        function NavLayout() {
          _ref2 = NavLayout.__super__.constructor.apply(this, arguments);
          return _ref2;
        }

        NavLayout.prototype.className = "navbar navbar-fixed-top";

        NavLayout.prototype.template = _.template(headerBarTpl);

        NavLayout.prototype.regions = {
          main: "#main-nav",
          profile: "#profile-nav"
        };

        return NavLayout;

      })(Marionette.Layout)
    };
  });

}).call(this);
