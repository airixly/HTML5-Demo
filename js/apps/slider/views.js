// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["app", "marionette", "text!./tpl/slider-tpl.html", "text!./tpl/img-tpl.html", "text!./tpl/dot-cmd-tpl.html"], function(App, Marionette, sliderTpl, imgTpl, dotCmdTpl) {
    var ImageView, SliderView, _ref, _ref1;
    return {
      ImageView: ImageView = (function(_super) {
        __extends(ImageView, _super);

        function ImageView() {
          _ref = ImageView.__super__.constructor.apply(this, arguments);
          return _ref;
        }

        ImageView.prototype.tagName = "li";

        ImageView.prototype.template = _.template(imgTpl, null, {
          variable: "data"
        });

        return ImageView;

      })(Marionette.ItemView),
      SliderView: SliderView = (function(_super) {
        __extends(SliderView, _super);

        function SliderView() {
          _ref1 = SliderView.__super__.constructor.apply(this, arguments);
          return _ref1;
        }

        SliderView.prototype.template = _.template(sliderTpl);

        SliderView.prototype.id = "slider-modal";

        SliderView.prototype.className = "modal fade";

        SliderView.prototype.itemView = ImageView;

        SliderView.prototype.itemViewContainer = ".slider-list";

        SliderView.prototype.attributes = {
          tabindex: "-1",
          role: "dialog",
          "aria-labeledby": "imageSlider",
          "aria-hidden": "true"
        };

        SliderView.prototype.ui = {
          "dot": ".dot-commands li"
        };

        SliderView.prototype.events = {
          "click @ui.dot": "select",
          "hidden.bs.modal": "hidden"
        };

        SliderView.prototype.timeout = 0;

        SliderView.prototype.dotCmdTpl = _.template(dotCmdTpl, null, {
          variable: "data"
        });

        SliderView.prototype.isItemAdded = false;

        SliderView.prototype.onAfterItemAdded = function() {
          var className;
          className = "";
          if (!this.isItemAdded) {
            this.isItemAdded = true;
            className = "dot-animation";
          }
          return this.$(".dot-commands").append(this.dotCmdTpl({
            className: className
          }));
        };

        SliderView.prototype.hidden = function() {
          return App.Router.navigate("home");
        };

        SliderView.prototype.select = function(e) {
          var $slider, $target, order,
            _this = this;
          $target = $(e.currentTarget);
          order = $target.index();
          $slider = $("#slider .slider-list");
          this.controlAnimation($slider, order, false);
          if (this.timeout) {
            clearTimeout(this.timeout);
          }
          return this.timeout = setTimeout(function() {
            return $slider.animate({
              left: 0
            }, 1000, function() {
              return _this.controlAnimation($slider, order, true);
            });
          }, 3000);
        };

        SliderView.prototype.controlAnimation = function($slider, order, start) {
          var $dot, $dotCmd, $dots, $progress, dotColor, op;
          $progress = $(".slider-progress");
          $dots = $(".dot-commands").find(".dot-cmd");
          $dotCmd = $dots.eq(0);
          $dot = $dots.eq(order);
          dotColor = "#bd9b83";
          $dots.removeAttr("style");
          if (start) {
            op = "addClass";
          } else {
            op = "removeClass";
            $slider.css("left", "" + (-order * 100) + "%");
            $dot.css("background-color", dotColor);
          }
          $slider[op]("slider-animation");
          $progress[op]("progress-animation");
          return $dotCmd[op]("dot-animation");
        };

        return SliderView;

      })(Marionette.CompositeView)
    };
  });

}).call(this);
