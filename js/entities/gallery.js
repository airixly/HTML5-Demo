// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["backbone", "ctrlVent"], function(Backbone, ctrlVent) {
    var API, GalleryCollection, _ref;
    GalleryCollection = (function(_super) {
      __extends(GalleryCollection, _super);

      function GalleryCollection() {
        _ref = GalleryCollection.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      GalleryCollection.prototype.initialize = function() {
        var _this = this;
        return ctrlVent.events.on("search:gallery", function() {
          return _this.fetchPhotos();
        });
      };

      GalleryCollection.prototype.fetchPhotos = function() {
        var _this = this;
        return $.ajax({
          url: "http://api.flickr.com/services/feeds/photos_public.gne",
          data: {
            tags: "saber,extra",
            tagmode: "all",
            format: "json"
          },
          dataType: "jsonp",
          jsonp: "jsoncallback",
          success: function(res) {
            var item, _i, _len, _ref1;
            if (res.items) {
              _ref1 = res.items;
              for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
                item = _ref1[_i];
                _this.parse(item);
              }
              return _this.reset(res.items);
            }
          }
        });
      };

      GalleryCollection.prototype.parse = function(item) {
        var _ref1, _ref2;
        item.media.m = item.media.m.replace(/_m.jpg$/, "_z.jpg");
        item.width = (_ref1 = item.description.match(/width="(\d+)"/)) != null ? _ref1[1] : void 0;
        return item.height = (_ref2 = item.description.match(/height="(\d+)"/)) != null ? _ref2[1] : void 0;
      };

      return GalleryCollection;

    })(Backbone.Collection);
    ctrlVent.reqres.setHandler("gallery:entities", function() {
      return API.getGalleryEntities();
    });
    return API = {
      getGalleryEntities: function() {
        var gallery;
        return gallery = new GalleryCollection();
      }
    };
  });

}).call(this);
